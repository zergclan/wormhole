<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zergclan.wormhole.console.infra.repository.mapper.ExecutionTaskLogMapper">
    <resultMap id="TaskLogResultMap" type="com.zergclan.wormhole.console.application.domain.log.TaskExecutionLog">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="plan_batch" property="planBatch" jdbcType="BIGINT"/>
        <result column="plan_id" property="planId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="task_batch" property="taskBatch" jdbcType="BIGINT"/>
        <result column="task_id" property="taskId" jdbcType="INTEGER"/>
        <result column="trans_data_num" property="transDataNum" jdbcType="INTEGER"/>
        <result column="error_data_num" property="errorDataNum" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="table_name">task_execution_log</sql>

    <sql id="id">id = #{id,jdbcType=INTEGER}</sql>

    <sql id="limit">LIMIT #{start}, #{size}</sql>

    <sql id="insert_columns">
        plan_batch, plan_id, status, description,
        task_batch, task_id, trans_data_num, error_data_num, create_time, modify_time
    </sql>

    <sql id="insert_values">
        #{planBatch,jdbcType=BIGINT}, #{planId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
        #{description,jdbcType=VARCHAR}, #{taskBatch,jdbcType=BIGINT}, #{taskId,jdbcType=INTEGER},
        #{transDataNum,jdbcType=INTEGER},#{errorDataNum,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
    </sql>

    <sql id="insert_batch_values">
        #{planBatch,jdbcType=BIGINT}, #{planId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
        #{description,jdbcType=VARCHAR}, #{taskBatch,jdbcType=BIGINT}, #{taskId,jdbcType=INTEGER},
        #{transDataNum,jdbcType=INTEGER},#{errorDataNum,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
    </sql>

    <sql id="update_columns">
        <if test="null != planBatch">
            plan_batch = #{planBatch,jdbcType=BIGINT}
        </if>
        <if test="null != planId">
            plan_id = #{planId,jdbcType=INTEGER}
        </if>
        <if test="null != status">
            status = #{status,jdbcType=INTEGER},
        </if>
        <if test="null != description">
            description = #{description,jdbcType=VARCHAR},
        </if>
        <if test="null != taskBatch">
            task_batch = #{taskBatch,jdbcType=BIGINT}
        </if>
        <if test="null != taskId">
            task_id = #{taskId,jdbcType=INTEGER}
        </if>
        <if test="null != transDataNum">
            trans_data_num = #{transDataNum,jdbcType=INTEGER}
        </if>
        <if test="null != errorDataNum">
            error_data_num = #{errorDataNum,jdbcType=INTEGER}
        </if>
    </sql>

    <sql id="select_columns">
        id, plan_batch, plan_id, status, description,
        task_batch, task_id, trans_data_num, error_data_num, create_time, modify_time
    </sql>

    <sql id="select_count">
        COUNT(id) AS total
    </sql>

    <sql id="where_fuzzy_query">
        <if test="null != planId">
            OR plan_id LIKE CONCAT('%', #{planId,jdbcType=INTEGER}, '%')
        </if>
        <if test="null != status">
            OR status LIKE CONCAT('%', #{status,jdbcType=INTEGER}, '%')
        </if>
        <if test="null != taskId">
            OR task_id LIKE CONCAT('%', #{taskId,jdbcType=INTEGER}, '%')
        </if>
        <if test="null != taskBatch">
            OR status LIKE CONCAT('%', #{taskBatch,jdbcType=INTEGER}, '%')
        </if>
    </sql>

    <sql id="where_fuzzy_query_page">
        <if test="null != planId">
            OR plan_id LIKE CONCAT('%', #{planId,jdbcType=INTEGER}, '%')
        </if>
        <if test="null != status">
            OR task_batch LIKE CONCAT('%', #{status,jdbcType=INTEGER}, '%')
        </if>
        <if test="null != taskId">
            OR task_id LIKE CONCAT('%', #{taskId,jdbcType=INTEGER}, '%')
        </if>
        <if test="null != taskBatch">
            OR status LIKE CONCAT('%', #{taskBatch,jdbcType=INTEGER}, '%')
        </if>
    </sql>

    <insert id="insert" parameterType="com.zergclan.wormhole.console.application.domain.log.TaskExecutionLog">
        INSERT INTO <include refid="table_name"/> (<include refid="insert_columns"/>) VALUES (<include refid="insert_values"/>)
    </insert>

    <insert id="insertBatch" parameterType="java.util.Collection">
        INSERT INTO <include refid="table_name"/> (<include refid="insert_columns"/>)
        VALUES
        <foreach collection="list" item="batch" separator=",">
            (<include refid="insert_batch_values"/>)
        </foreach>
    </insert>

    <update id="updateById" parameterType="com.zergclan.wormhole.console.application.domain.log.TaskExecutionLog">
        UPDATE <include refid="table_name"/>
        <set>
            <include refid="update_columns"/>
            modify_time = #{modifyTime,jdbcType=VARCHAR}
        </set>
        WHERE <include refid="id"/>
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM <include refid="table_name"/> WHERE <include refid="id"/>
    </delete>

    <select id="get" parameterType="java.lang.Integer" resultMap="TaskLogResultMap">
        SELECT <include refid="select_columns"/> FROM <include refid="table_name"/> WHERE <include refid="id"/>
    </select>

    <select id="countAll" resultType="java.lang.Integer">
        SELECT <include refid="select_count"/> FROM <include refid="table_name"/>
    </select>

    <select id="listAll" resultMap="TaskLogResultMap">
        SELECT <include refid="select_columns"/> FROM <include refid="table_name"/>
    </select>

    <select id="listInIds" parameterType="java.util.Collection" resultType="java.lang.Integer">
        SELECT <include refid="select_columns"/> FROM <include refid="table_name"/>
        WHERE id IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="countByPage" parameterType="com.zergclan.wormhole.console.application.domain.log.TaskExecutionLog" resultType="java.lang.Integer">
        SELECT <include refid="select_count"/> FROM <include refid="table_name"/>
        <where>
            <include refid="where_fuzzy_query"/>
        </where>
    </select>

    <select id="page" parameterType="com.zergclan.wormhole.console.api.vo.PageQuery" resultMap="TaskLogResultMap">
        SELECT <include refid="select_columns"/> FROM <include refid="table_name"/>
        <where>
            <include refid="where_fuzzy_query_page"/>
        </where>
        <include refid="limit"/>
    </select>
</mapper>
